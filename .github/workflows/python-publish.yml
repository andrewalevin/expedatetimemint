name: Upload and Release Python Package

on:
  push:
    branches:
      - main  # Укажите нужную ветку для создания релиза и загрузки на PyPi
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: andrewlevin
      PROJECT_NAME: expedatetimemint
    steps:
    - name: Print start message
      run: echo "Starting the GitHub Action workflow for Python package upload..."

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: 🟢 Install 🦅 VersionHawk
      run: |
        echo "Install 🦅 VersionHawk..."
        python -m pip install --upgrade pip
        pip install versionhawk
        echo "Version <-"
        
    - name: 🔵 Get 🦅 VersionHawk
      run: echo "VERSION=$(versionhawk expedatetimemint)" >> $GITHUB_ENV

    - name: 🍐 Get current date and time Version
      id: get_datetime
      run: echo "VERSION=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    - name: 🟠 Check 🦅 VersionHawk
      run: |
          echo "🟠 The value of VERSION is $VERSION"

    - name: 🟣 Sed
      run: |
          sed -i "s/PROJECT_VERSION/${VERSION}/g" pyproject.toml

    - name: 🟡 Cat
      run: |
          cat pyproject.toml


    - name: 🍏 Install dependencies
      run: |
        echo "Installing necessary dependencies..."
        python -m pip install --upgrade pip
        pip install build

    - name: 🍎 Build package
      run: |
        echo "Building the Python package..."
        python -m build

    - name: 🍊 Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}  # Используем переменную VERSION как тег
        release_name: "${{ env.VERSION }}"  # Название релиза
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 🍋 Publish package
      if: steps.create_release.outputs.upload_url != ''
      uses: pypa/gh-action-pypi-publish@v1.8.6
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: 🍟 Echo
      run: echo "DOCKERNAMETAG=$(echo "$DOCKERHUB_USERNAME/$PROJECT_NAME:$VERSION")" >> $GITHUB_ENV  
    
    - name: 🍟🍟 Echo
      run: echo "$DOCKERNAMETAG"
  
    - name: 🍓 Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 🍒 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
        

    - name: 🥭 Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ env.DOCKERNAMETAG }}
        







      
