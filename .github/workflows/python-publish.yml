name: Upload and Release Python Package

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: andrewlevin
      PROJECT_NAME: expedatetimemint
    steps:
    - name: 🍊 Checkout repository
      uses: actions/checkout@v4

    - name: 🍋 Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: 🐍 🔄 PyPI Upgrade
      run: python -m pip install --upgrade pip

    - name: 🐍 ⬇️ 🦅 PyPI. VersionHawk Install
      run: pip install versionhawk

    #- name: 🔢 🕰️ Version DateTimeStamp
    #  run: echo "VERSION=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    #- name: 🐍 📦 🔫 🔢 🦅 VersionHawk New version to PROJECT.TOML
    #  run: |
    #    echo "VERSION=$(versionhawk expedatetimemint)" >> $GITHUB_ENV
    #    sed -i "s/PROJECT_VERSION/${VERSION}/g" pyproject.toml

    - name: 🔵 Get 🦅 VersionHawk
      run: |
        echo "VERSION=$(versionhawk expedatetimemint)" >> $GITHUB_ENV
      
    - name: 🟠 Check 🦅 VersionHawk
      run: |
          echo "🟠 The value of VERSION is $VERSION"

    - name: 🟣 Sed
      run: |
          sed -i "s/PROJECT_VERSION/${VERSION}/g" pyproject.toml

    - name: 🟡 Cat
      run: |
          cat pyproject.toml
    
    - name: DEV 🐍 📦 🔫 🔢 🦅 VersionHawk New version to PROJECT.TOML
      run: |
        echo "🔫 Version 🔫 : ${{ env.VERSION }}"
        cat pyproject.toml

    - name: 🐍 ⬇️ Python. Install dependencies
      run: pip install build

    - name: 🐍 🏗️ Python. Build package
      run: python -m build

    - name: 😺 💾 🚀 Github. Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        release_name: ${{ env.VERSION }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 🐍 💾 🚀 Python PyPI. Publish package
      if: steps.create_release.outputs.upload_url != ''
      uses: pypa/gh-action-pypi-publish@v1.8.6
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
  
    - name: 🐳 🔑 Docker. Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: 🐳 🏗️ Docker. Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🐳 💾 🚀 Docker. Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: |
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:${{ env.VERSION }}
            ${{ env.DOCKERHUB_USERNAME }}/${{ env.PROJECT_NAME }}:latest
        platforms: linux/arm64,linux/amd64,linux/386,linux/arm/v7
            
        









      
