name: Upload and Release Python Package

on:
  push:
    branches:
      - main  # Укажите нужную ветку для создания релиза и загрузки на PyPi
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Print start message
      run: echo "Starting the GitHub Action workflow for Python package upload..."

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python environment
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: 🟢 Install 🦅 VersionHawk
      run: |
        echo "Install 🦅 VersionHawk..."
        python -m pip install --upgrade pip
        pip install versionhawk
        echo "Version <-"
        
    - name: 🟢🟢 Get 🦅 VersionHawk
      run: echo "VERSION=$(versionhawk expedatetimemint)" >> $GITHUB_ENV

    - name: 🟢🟢🟢 Check 🦅 VersionHawk
      run: |
          echo "🟢 The value of VERSION is $VERSION"

    - name: Build package
      run: |
        echo "Building the Python package..."
        python -m build

    - name: Get current date and time
      id: get_datetime
      run: echo "::set-output name=tag::v$(date +'%Y%m%d-%H%M%S')"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.tag }}  # Используем дату и время как тег
        release_name: "Release ${{ steps.get_version.outputs.tag }}"  # Название релиза
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish package
      if: steps.create_release.outputs.upload_url != ''
      uses: pypa/gh-action-pypi-publish@v1.8.6
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
